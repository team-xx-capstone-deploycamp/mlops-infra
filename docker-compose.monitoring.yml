services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/)'
    expose:
      - "9100"
    networks:
      - shared_network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    networks:
      - shared_network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER:-myuser}:${POSTGRES_PASSWORD:-mypassword}@postgres:5432/${POSTGRES_DB:-mydb}?sslmode=disable"
    networks:
      - shared_network

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    restart: unless-stopped
    command:
      - -nginx.scrape-uri=http://nginx:8081/nginx_status
    networks:
      - shared_network

  nginx-log-exporter:
    image: quay.io/martinhelmich/prometheus-nginxlog-exporter:v1.10.0
    container_name: nginx-log-exporter
    restart: unless-stopped
    volumes:
      - ./nginx-log-exporter/config.yml:/etc/prometheus-nginxlog-exporter/config.yml:ro
      - /var/log/nginx:/var/log/nginx:ro
    expose:
      - "4040"
    networks:
      - shared_network
    command:
      - -config-file=/etc/prometheus-nginxlog-exporter/config.yml
      - -listen-address=0.0.0.0
      - -listen-port=4040
    environment:
      - PROMETHEUS_NGINXLOG_EXPORTER_LOG_LEVEL=debug

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - shared_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin123}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    expose:
      - "3000"
    networks:
      - shared_network

volumes:
  prometheus-data:
  grafana-data:
  nginx-logs:

networks:
  shared_network:
    external: true
